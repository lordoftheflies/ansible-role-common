---
- name: "Ensure a locales exists"
  become: yes
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items: "{{ locales }}"

- name: "Get current locale and language configuration"
  become: yes
  command: localectl status
  register: locale_status
  changed_when: false

- name: "Parse 'LANG' from current locale and language configuration"
  become: yes
  set_fact:
    locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"
- name: "Parse 'LANGUAGE' from current locale and language configuration"
  become: yes
  set_fact:
    locale_language: "{{ locale_status.stdout | regex_search('LANGUAGE=([^\n]+)', '\\1') | default([locale_lang], true) | first }}"

- name: "Configure locale to \"{{ system_locale }}\" and language to \"{{ system_language }}\""
  become: yes
  command: "localectl set-locale LANG={{ system_locale }} LANGUAGE={{ system_language }}"
  changed_when: locale_lang != system_locale or locale_language != system_language